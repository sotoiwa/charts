apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "fullname" . }}
  labels:
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  serviceName: {{ include "fullname" . }}
  selector:
    matchLabels:
      app: {{ include "fullname" . }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ include "fullname" . }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
    spec:
      initContainers:
      - name: app
        image: "{{ .Values.appImage.repository }}:{{ .Values.appImage.tag }}"
        imagePullPolicy: {{ .Values.appImage.pullPolicy }}
        command:
        - sh
        - -c
        - |-
          cp -rp /config/* /mnt/config/
          cp -rp /userhome/* /mnt/userhome/
          chown -R 1001:0 /mnt/config
          chown -R 1001:0 /mnt/userhome
        volumeMounts:
        - name: config-volume
          mountPath: /mnt/config
        - name: userhome-volume
          mountPath: /mnt/userhome
      containers:
      - name: liberty
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 9080
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 10 }}
        readinessProbe:
          {{- toYaml .Values.livenessProbe | nindent 10 }}
        env:
        - name: LICENSE
          value: "accept"
        - name : WLP_SKIP_UMASK
          value: "true"
        - name: WLP_LOGGING_CONSOLE_FORMAT
          value: {{ .Values.logs.consoleFormat }}
        - name: WLP_LOGGING_CONSOLE_LOGLEVEL
          value: {{ .Values.logs.consoleLogLevel }}
        - name: WLP_LOGGING_CONSOLE_SOURCE
          value: {{ .Values.logs.consoleSource }}
        - name: JVM_ARGS
          value: {{ .Values.env.jvmArgs }}
        envFrom:
        - configMapRef:
            name: {{ .Values.configMapName }}
        - secretRef:
            name: {{ .Values.secretName }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
        - name: config-volume
          mountPath: /config
        - name: userhome-volume
          mountPath: /userhome
        - name: liberty-pvc
          mountPath: /logs
          subPath: logs
        - name: liberty-pvc
          mountPath: /Local/core/wlp
          subPath: dump
        - name: liberty-pvc
          mountPath: /Local/uservar000/mid/log
          subPath: applogs
      volumes:
      - name: config-volume
        emptyDir: {}
      - name: userhome-volume
        emptyDir: {}
      restartPolicy: "Always"
      terminationGracePeriodSeconds: 30
      dnsPolicy: "ClusterFirst"
  volumeClaimTemplates:
  - metadata:
      name: {{ .Values.persistence.name | quote }}
    spec:
      storageClassName: {{ .Release.Name }}
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
